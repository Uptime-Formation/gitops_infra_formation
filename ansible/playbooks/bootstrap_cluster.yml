- hosts: localhost
  tasks:
    - name: add ingress nginx chart repo
      kubernetes.core.helm_repository:
        name: ingress-nginx
        repo_url: "https://kubernetes.github.io/ingress-nginx"
    
    - name: install ingress nginx chart
      kubernetes.core.helm:
        kubeconfig: ~/.kube/k3s.kubeconfig
        name: ingress-nginx
        chart_ref: ingress-nginx/ingress-nginx
        chart_version: 4.1.4
        release_namespace: ingress-nginx
        create_namespace: true
        values:
          replicas: 2
    
    - name: add cert-manager chart repo
      kubernetes.core.helm_repository:
        name: cert-manager
        repo_url: "https://charts.jetstack.io"
    
    - name: install cert-manager chart
      kubernetes.core.helm:
        kubeconfig: ~/.kube/k3s.kubeconfig
        name: cert-manager
        chart_ref: cert-manager/cert-manager
        release_namespace: cert-manager
        create_namespace: true
        chart_version: 1.9.1
        values:
          installCRDs: true

    - name: create letsencrypt prod Cluster Issuer
      kubernetes.core.k8s:
        kubeconfig: ~/.kube/k3s.kubeconfig
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-prod
          spec:
            acme:
              # You must replace this email address with your own.
              # Let's Encrypt will use this to contact you about expiring
              # certificates, and issues related to your account.
              email: cto@doxx.fr
              server: https://acme-v02.api.letsencrypt.org/directory
              privateKeySecretRef:
                # Secret resource that will be used to store the account's private key.
                name: letsencrypt-prod-account-key
              # Add a single challenge solver, HTTP01 using nginx
              solvers:
              - http01:
                  ingress:
                    class: nginx
    
    - name: add argo chart repo
      kubernetes.core.helm_repository:
        name: argo
        repo_url: "https://argoproj.github.io/argo-helm"
    
    - name: install argo-cd chart
      kubernetes.core.helm:
        kubeconfig: ~/.kube/k3s.kubeconfig
        name: argo-cd
        chart_ref: argo/argo-cd
        release_namespace: argo-cd
        create_namespace: true
        chart_version: 5.19.7
        values:
          server:
            ingress:
              enabled: true
              hosts:
                - argocd.cp0.k3lab.dopl.uk
              https: true
              tls:
                - secretName: argocd-secret
                  hosts: 
                    - argocd.cp0.k3lab.dopl.uk
              annotations:
                cert-manager.io/cluster-issuer: letsencrypt-prod
                kubernetes.io/ingress.class: nginx
                # kubernetes.io/tls-acme: "true"
                # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
                # If you encounter a redirect loop or are getting a 307 response code 
                # then you need to force the nginx ingress to connect to the backend using HTTPS.
                #
                nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    

